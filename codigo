globals [
  sedimentLayer
  sampleInterval
  timeStep
  heightMax
  sedimentRate  ;; Velocidad de sedimentación en m/h (calculada)
  concentration  ;; Concentración en g/L (convertida a número desde el input)
  sedimentV0  ;; Velocidad inicial en m/h
  sedimentK  ;; Constante de Vesilind en L/g
  maxFlocSize
  adhesionProbability
  ivl_real  ;; Índice Volumétrico de Lodos en mL/g
  mantleHeight  ;; Altura actual del manto de lodo en escala gráfica ( 0 a 480)
  vesilindMantleHeight ;; Manto de lodo basado en Vesilind
  alturaRecalculadaH30 ;; Monitor para mostrar la altura recalculada
  sedimentationData ;; Lista para almacenar (timeStep, vesilindMantleHeight)

  ;; Nuevas variables añadidas
  minError  ;; Error mínimo encontrado
  ivl_sim  ;; IVL experimental
  height_simulated  ;; Altura simulada acumulada
  log_height_time  ;; Registro de altura acumulada vs tiempo
  AlturaTakacs    ;; Altura calculada con el modelo de Takács
  AlturaCorre

]

turtles-own [
  reachedBottom
  settlingRate
  flocSize
]

patches-own [
  sedimentDepth
]

to calculateSedimentRate
  ;; Calcula la tasa de sedimentación basada en la fórmula de Vesilind
  set sedimentRate sedimentV0 * exp(-1 * sedimentK * concentration)
end



to calculateIVLSimulated
  ;; Altura simulada basada en Vesilind
  let simulatedHeight heightMax - (sedimentV0 * exp(-1 * sedimentK * concentration) * (maxTime / 60))

  ;; Evitar alturas negativas
  if simulatedHeight < 0 [ set simulatedHeight 0 ]

  ;; IVL simulado en mL/g
  set ivl_sim (simulatedHeight * 1000) / concentration
end

to accumulateMantle
  set log_height_time []
  let delta_t 5
  let currentHeight heightMax
  repeat 6 [
    let sedimentation sedimentV0 * exp(-1 * sedimentK * concentration) * (delta_t / 60)
    set currentHeight currentHeight - sedimentation
    if currentHeight < 0 [ set currentHeight 0 ]
    set log_height_time lput (list timeStep currentHeight) log_height_time
    set mantleHeight currentHeight * 400  ;; Escalar para la gráfica
    tick
  ]
  show (word "Registro de alturas: " log_height_time)
end

to setup
  clear-all

  ;; Variables ajustables
  set sedimentV0 VelocidadInicial  ;; Velocidad inicial en m/h
  set sedimentK ConstanteVesilind ;; Constante de Vesilind en L/g
  set mantleHeight 0  ;; El manto comienza en la base (y = 0)
  set vesilindMantleHeight 0  ;; Inicializa el nuevo manto en 0
  set sedimentationData [] ;; Inicializa la lista de datos de sedimentación
  set ivl_real 80  ;; Valor experimental del IVL
  set log_height_time []  ;; Inicializa el registro

  ;; Validar y convertir concentración
  ifelse is-number? read-from-string InputConcentracion [
    set concentration read-from-string InputConcentracion
  ] [
    user-message "Error: La concentración debe ser un número. Corrige el valor ingresado."
    stop
  ]

  if concentration <= 0 [
    user-message "Error: La concentración debe ser mayor que 0."
    stop
  ]

  set sampleInterval 1 ;; Actualiza cada minuto (tick)
  set maxTime 30  ;; Duración del ensayo en minuto
  set heightMax 0.48  ;; Altura máxima en metros (convertida de cm a m)
  set maxFlocSize 30  ;; Tamaño máximo del flóculo
  set adhesionProbability 0.1  ;; Probabilidad de adhesión (10%)

  ;; Configuración inicial de la capa de sedimento
  set sedimentLayer heightMax
  calculateSedimentRate  ;; Calcula sedimentRate con la concentración proporcionada

  ;; Configuración inicial de parches
  ask patches [
    set pcolor blue
  ]

  ;; Crear bacterias (partículas) proporcional a la concentración
  let numParticles concentration * 5000
  create-turtles numParticles [
    set color brown
    set shape "circle"  ;; Asegura que las tortugas sean redondas
    set size random-normal 1.4 0.4  ;; Tamaño duplicado (antes era 0.7)
    set size max list size 0.2      ;; Tamaño mínimo ajustado al doble (antes era 0.1)
    set settlingRate sedimentRate * random-float 0.9  ;; Usa velocidad inicial variada
    set flocSize 1
    setxy random-xcor random-ycor  ;; Coloca las partículas
    set reachedBottom false
  ]

  ;; Añadir un nuevo gráfico para la concentración
  set-current-plot "Concentración vs Tiempo"
  clear-plot

  set alturaRecalculadaH30 heightMax - (sedimentV0 * exp(-1 * sedimentK * concentration) * maxTime / 60)

  reset-ticks
end
to updateSedimentLayer
  ;; Actualiza la capa de sedimento basada en la tasa de sedimentación
  let currentSedimentLayer sedimentLayer - (sedimentRate / 60 * sampleInterval) ;; Convertir velocidad a m/tick
  if currentSedimentLayer < 1 [
    set sedimentLayer 1
  ]
  set sedimentLayer currentSedimentLayer
end

to updateMantle
  ;; Incrementa la altura del manto de lodo basado en Sedimentacion30min
  let mantleIncrement Sedimentacion30min / maxTime
  set mantleHeight mantleHeight + (mantleIncrement * 400)  ;; Escala de 0 a 480 (gráfica)

  ;; Evita que el manto exceda Sedimentacion30min en escala gráfica
  if mantleHeight > 480 [
    set mantleHeight 0
  ]

  ;; Acumula bacterias en el fondo
  ask turtles [
    if reachedBottom [
      set ycor mantleHeight - 1  ;; Mueve las bacterias al nivel actual del fondo
    ]
  ]

  ;; Actualiza los parches para reflejar visualmente el manto
  ask patches [
    if pycor <= mantleHeight [
      set pcolor brown
    ]
  ]
end

to updateVesilindMantle
  ;; Calcula el incremento del manto según el modelo Vesilind
  let currentRate sedimentV0 * exp(-1 * sedimentK * concentration) ;; Velocidad de sedimentación actual
  let mantleIncrement (heightMax / maxTime) * currentRate          ;; Incremento proporcional al tiempo
  set vesilindMantleHeight vesilindMantleHeight + mantleIncrement  ;; Actualiza la altura del manto Vesilind

  ;; Evita que el manto exceda la altura máxima
  if vesilindMantleHeight > heightMax [
    set vesilindMantleHeight heightMax
  ]

  ;; Graficar la curva en tiempo real
  set-current-plot "Acumulación de Lodo" ;; Selecciona el gráfico
  plotxy timeStep vesilindMantleHeight      ;; Dibuja un punto (timeStep, altura Vesilind)
end

to saveSedimentationData
  ;; Guarda (timeStep, vesilindMantleHeight) en la lista
  set sedimentationData lput (list timeStep vesilindMantleHeight) sedimentationData
end

to updateConcentrationGraph
  ;; Calcula la concentración en función del tiempo usando la fórmula de Vesilind
  let currentConcentration concentration * exp(-1 * sedimentK * timeStep)

  ;; Graficar la concentración en tiempo real
  set-current-plot "Concentración vs Tiempo"
  plotxy timeStep currentConcentration
end
to calculateAlturaTakacs



  ;; Velocidad efectiva considerando compresión

  if concentration > compressionCritical [

  ]

  ;; Calcular la Altura Takács
  set AlturaTakacs alturaRecalculadaH30 - (sedimentV0 * exp(-1 * sedimentK * concentration / compressionCritical ) * timeStep / 60)
  set AlturaCorre heightMax - (sedimentV0 * exp(-1 * sedimentK * concentration / compressionCritical ) * timeStep / 60)
  if AlturaTakacs < 0 [ set AlturaTakacs 0 ]  ;; Evitar valores negativos
end
to go
  if timeStep >= maxTime [
    stop
  ]

  if timeStep mod sampleInterval = 0 [
    updateSedimentLayer
    updateMantle
    updateVesilindMantle
    updateConcentrationGraph ;; Actualiza el gráfico de concentración
    saveSedimentationData ;; Guarda los datos en cada intervalo
    set alturaRecalculadaH30 heightMax - (sedimentV0 * exp(-1 * sedimentK * concentration) * timeStep / 60)
    takeSample


    ;; Calcular alturas actualizadas
    calculateIVLSimulated
    calculateAlturaTakacs]
  ask turtles [
    flocculate
    moveDown
  ]
  wait 0.3 ;; Pausa entre ticks para hacer la simulación visualmente más lenta
  tick
  set timeStep timeStep + 1
end

to flocculate
  if not reachedBottom [
    let nearbyTurtles turtles-on neighbors
    let closeNeighbors nearbyTurtles with [distance myself < 1]
    if any? closeNeighbors [
      let target one-of closeNeighbors
      if random-float 1 < adhesionProbability [
        ;; Fusiona tamaños si ambos están dentro del tamaño máximo
        if (flocSize + [flocSize] of target) <= maxFlocSize [
          set flocSize flocSize + [flocSize] of target
          ask target [ die ]
          set size sqrt(flocSize) * 0.5  ;; Cambia el tamaño visual
        ]
      ]
    ]
  ]
end

to moveDown
  if not reachedBottom [
    set heading 180  ;; Mueve las partículas hacia abajo
    ;; Calcula el tiempo restante como una proporción del máximo tiempo
    let timeRemaining maxTime - timeStep
    let timeFactor ( exp (timeRemaining /  maxTime))  ;; Factor de desaceleración

    ;; Calcula la velocidad ajustada en relación a la altura del manto y el tiempo restante
    let adjustedRate settlingRate * sqrt(flocSize) * timeFactor
    if adjustedRate < 0.0001 [ set adjustedRate 0.0001 ]  ;; Velocidad mínima
    fd adjustedRate

    ;; Restringe el movimiento al rango del lodo
    if ycor <= mantleHeight [
      set reachedBottom true
    ]
  ]

  ;; Fija el flóculo en el fondo
  if reachedBottom [
    set ycor mantleHeight - 1
  ]
end

to calcularIVL_real
  ;; Cálculo del volumen sedimentado en mL/L
  let volumenSedimentado (Sedimentacion30min * 2086)  ;; Convertir altura final en metros a mL/L

  ;; Usar la concentración (MLSS) calculada por Vesilind
  let mlss concentration

  ;; Validar que MLSS no sea cero para evitar divisiones por cero
  if mlss > 0 [
    set ivl_real volumenSedimentado / mlss
    show (word "El IVL calculado es: " ivl_real " mL/g")
  ]
end
to
  clear
  set sedimentV0 1.5
  set sedimentK 0.5
  set Sedimentacion30min 0.2  ;; Altura experimental inicial en metros
  set timeStep 0
  set alturaRecalculadaH30 heightMax - (sedimentV0 * exp(-1 * sedimentK * concentration) * maxTime / 60)
  reset-ticks
end


to takeSample
  show (word "Acumulación de lodo en " timeStep " minutos: " mantleHeight)
  show (word "Altura del manto Vesilind en " timeStep " minutos: " vesilindMantleHeight " m ")
  show (word "Velocidad de sedimentación: " sedimentRate " m/h")
end
